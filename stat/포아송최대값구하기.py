# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_rRmlCGGPolrKWXt_2Ubi-vsx2FSp1FV
"""

import matplotlib.pyplot as plt
import numpy as np

import math

def poisson(count: int):
    return (math.exp(-17) * 17**count) / math.factorial(count)

def accumulated_probability(count: int):
  probability = 0.0
  for i in range(0, count):
    probability = probability + poisson(i)

  return probability

max_count = 0
for i in range(0, 30):
  if(accumulated_probability(i) > 0.99):
    max_count = i
    print("최대 ", max_count, "회로 계산을 수행합니다")
    break
  elif(i == 30):
    print("30회까지 0.99를 초과하지 않습니다 : ", accumulated_probability(i))

x = range(0, max_count)
y = []
for make_count in range(0, max_count):
  profit = 0
  for sell_count in range(0, make_count):
    profit += (1 - accumulated_probability(sell_count)) * 25000
  y.append(profit - (make_count * 5000))

max_index = np.argmax(y)
max_x = x[max_index]
max_y = y[max_index]

# 그래프 출력
plt.plot(x, y)
plt.scatter(max_x, max_y, color='red', label=f'Max Point: ({max_x:.2f}, {max_y:.2f})')

plt.text(max_x, max_y, f'({max_x:.2f}, {max_y:.2f})', verticalalignment='bottom', horizontalalignment='right')

plt.xlabel('count')
plt.ylabel('expected')
plt.grid(True)
plt.show()